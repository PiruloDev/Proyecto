{
  "name": "PHP & MySQL Dev Environment",
  // Le dice a Codespaces que use tu archivo docker-compose.yml
  "dockerComposeFile": [
    "../docker-compose.yml" // Ruta relativa desde .devcontainer/ al docker-compose.yml
  ],

  // El servicio de docker-compose al que VS Code se conectará.
  // Debe ser el servicio donde está tu código fuente principal (tu app PHP).
  "service": "app",

  // El directorio dentro del servicio 'app' donde VS Code abrirá.
  // Corresponde al `WORKDIR` o donde montas tu código en docker-compose.yml.
  "workspaceFolder": "/var/www/html",

  // Puertos a reenviar automáticamente.
  // "appPort" se refiere a los puertos expuestos por el "service" definido arriba (app).
  "forwardPorts": [8080, 3306], // Puerto de la app PHP y puerto de MySQL

  // Configuraciones y extensiones de VS Code para este Codespace
  "customizations": {
    "vscode": {
      "settings": {
        // Ejemplo: si usas la extensión SQLTools
        "sqltools.connections": [
          {
            "mysqlOptions": { "authProtocol": "default" },
            "previewLimit": 50,
            "server": "localhost", // Porque el puerto 3306 está reenviado
            "port": 3306,
            "driver": "MySQL",
            "name": "DBPanaderia (Codespace)",
            // Estas variables se toman del entorno del contenedor 'app'
            // que a su vez las recibe de docker-compose.yml
            "database": "${containerEnv:MYSQL_DATABASE}",
            "username": "${containerEnv:MYSQL_USER}"
            // Para la contraseña, es mejor que la extensión la pida o usar secretos de Codespaces.
            // "password": "${containerEnv:MYSQL_PASSWORD}" // ¡CUIDADO CON ESTO!
          }
        ],
        "php.validate.executablePath": "/usr/local/bin/php" // Para validación de PHP si es necesario
      },
      "extensions": [
        "ms-vscode-remote.remote-containers",   // Esencial para dev containers
        "ms-azuretools.vscode-docker",          // Para gestionar Docker (útil)
        "ms-vscode.live-share",                 // Para colaboración en tiempo real
        "bmewburn.vscode-intelephense-client",  // IntelliSense para PHP (muy recomendado)
        "felixfbecker.php-debug",               // Debugger para PHP (Xdebug)
        "mtxr.sqltools",                        // Un cliente SQL popular
        "mtxr.sqltools-driver-mysql",           // Driver de MySQL para SQLTools
        "github.copilot"                        // Opcional, si tu equipo usa Copilot
      ]
    }
  },

  // Usuario con el que se ejecutarán los comandos en el contenedor del servicio 'app'.
  // La imagen mcr.microsoft.com/devcontainers/php crea un usuario 'vscode'.
  "remoteUser": "vscode",

  // Comandos a ejecutar después de que el Codespace esté creado y VS Code se conecte.
  "postAttachCommand": "sudo chown -R vscode:www-data /var/www/html && sudo chmod -R 775 /var/www/html/public && sudo chmod -R u+w /var/www/html",
  // Este comando anterior intenta solucionar problemas comunes de permisos para Apache y permite escribir en todo /var/www/html.

  // Para asegurar que las extensiones PHP se cargan correctamente con Apache.
  "postCreateCommand": "echo 'Codespace creado. PHP y MySQL listos.'"
}